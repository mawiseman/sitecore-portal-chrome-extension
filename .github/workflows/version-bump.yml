name: Version Bump and Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - custom
      custom_version:
        description: 'Custom version (only used if version_type is custom)'
        required: false
        type: string
      create_release:
        description: 'Create GitHub release after version bump'
        required: true
        default: true
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  version-bump:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
      old_version: ${{ steps.bump.outputs.old_version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get current version
      id: current
      run: |
        CURRENT_VERSION=$(grep '"version"' src/manifest.json | sed -E 's/.*"version": "([^"]+)".*/\1/')
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"

    - name: Calculate new version
      id: bump
      run: |
        CURRENT_VERSION="${{ steps.current.outputs.version }}"
        VERSION_TYPE="${{ inputs.version_type }}"
        CUSTOM_VERSION="${{ inputs.custom_version }}"
        
        if [ "$VERSION_TYPE" = "custom" ]; then
          if [ -z "$CUSTOM_VERSION" ]; then
            echo "Error: Custom version is required when version_type is 'custom'"
            exit 1
          fi
          NEW_VERSION="$CUSTOM_VERSION"
        else
          # Split version into components
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          case "$VERSION_TYPE" in
            major)
              NEW_VERSION="$((MAJOR + 1)).0.0"
              ;;
            minor)
              NEW_VERSION="$MAJOR.$((MINOR + 1)).0"
              ;;
            patch)
              NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
              ;;
          esac
        fi
        
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "old_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Bumping version from $CURRENT_VERSION to $NEW_VERSION"

    - name: Update manifest.json
      run: |
        sed -i 's/"version": "[^"]*"/"version": "${{ steps.bump.outputs.new_version }}"/' src/manifest.json
        echo "Updated manifest.json to version ${{ steps.bump.outputs.new_version }}"
        cat src/manifest.json | grep version

    - name: Commit version bump
      run: |
        git add src/manifest.json
        git commit -m "chore: bump version to ${{ steps.bump.outputs.new_version }}"
        git push origin main

    - name: Create and push tag
      if: ${{ inputs.create_release }}
      run: |
        git tag "v${{ steps.bump.outputs.new_version }}"
        git push origin "v${{ steps.bump.outputs.new_version }}"
        echo "Created and pushed tag v${{ steps.bump.outputs.new_version }}"

  create-release:
    needs: version-bump
    if: ${{ inputs.create_release }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: v${{ needs.version-bump.outputs.new_version }}

    - name: Create extension package
      run: |
        # Create build directory
        mkdir -p build
        
        # Copy all source files to build directory
        cp -r src/* build/
        
        # Create zip file for Chrome Web Store
        cd build
        zip -r ../sitecore-portal-chrome-extension-${{ needs.version-bump.outputs.new_version }}.zip .
        cd ..
        
        # Create source code archive
        zip -r sitecore-portal-chrome-extension-source-${{ needs.version-bump.outputs.new_version }}.zip . \
          -x "*.git*" \
          -x "build/*" \
          -x "*.zip" \
          -x "node_modules/*"

    - name: Generate Release Notes
      id: release_notes
      run: |
        VERSION="${{ needs.version-bump.outputs.new_version }}"
        OLD_VERSION="${{ needs.version-bump.outputs.old_version }}"
        
        # Get commit messages since last version
        if git rev-parse "v$OLD_VERSION" >/dev/null 2>&1; then
          COMMITS=$(git log --pretty=format:"- %s" "v$OLD_VERSION"..HEAD --no-merges | grep -v "^- chore: bump version")
        else
          COMMITS=$(git log --pretty=format:"- %s" HEAD~10..HEAD --no-merges | grep -v "^- chore: bump version")
        fi
        
        # Create release notes
        cat > release_notes.md << EOF
        ## What's Changed in v$VERSION
        
        $COMMITS
        
        ### Installation
        
        #### Option 1: Load Unpacked (Developer Mode)
        1. Download the \`sitecore-portal-chrome-extension-$VERSION.zip\` file
        2. Extract the contents to a folder
        3. Open Chrome and navigate to \`chrome://extensions/\`
        4. Enable "Developer mode" in the top-right corner
        5. Click "Load unpacked" and select the extracted folder
        
        #### Option 2: Chrome Web Store (Coming Soon)
        Extension will be available on the Chrome Web Store for easy installation.
        
        ### Files Included
        - \`sitecore-portal-chrome-extension-$VERSION.zip\` - Chrome extension package (ready to load)
        - \`sitecore-portal-chrome-extension-source-$VERSION.zip\` - Complete source code archive
        
        ### Key Features
        - **Automatic Detection**: Captures Sitecore Portal organizations and tenants automatically
        - **Hierarchical Organization**: Groups tenants by product type (XM Cloud, Content Hub, etc.)
        - **Custom Naming**: Edit organization and tenant names for better organization
        - **Secure Navigation**: URL validation and safe browsing protection
        - **Memory Optimized**: Efficient resource usage and cleanup
        - **Current Context**: Visual indication of active organization
        
        ---
        
        **Full Changelog**: https://github.com/${{ github.repository }}/compare/v$OLD_VERSION...v$VERSION
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ needs.version-bump.outputs.new_version }}
        name: Sitecore Portal Chrome Extension v${{ needs.version-bump.outputs.new_version }}
        body_path: release_notes.md
        files: |
          sitecore-portal-chrome-extension-${{ needs.version-bump.outputs.new_version }}.zip
          sitecore-portal-chrome-extension-source-${{ needs.version-bump.outputs.new_version }}.zip
        draft: false
        prerelease: false